version: 2.1

parameters:
  csproj-file:
    type: string
    default: "SharpPcap/SharpPcap.csproj"
  sonar-project:
    type: string
    default: "Lansweeper_sharppcap"
  nuget-output-file:
    type: string
    default: "SharpPcap/bin/Release/Lansweeper.SharpPcap.$PACKAGE_VERSION.nupkg"
  nuget-output-file-static:
    type: string
    default: "SharpPcap/bin/Release/Lansweeper.SharpPcap.StaticLinking.$PACKAGE_VERSION.nupkg"

executors:
  node:
    docker:
      - image: circleci/node:12

orbs:
  win: circleci/windows@5.0.0
  sonar-check: lansweeper/sonar@0.0.6

commands:
  report:
    steps:
    - store_test_results:
        path: Test/TestResults
    - store_artifacts:
        path: Test/TestResults

jobs:
  build:
    executor: win/default
    steps:
      - checkout
      - run:
          name: Extract version from .csproj
          command: |
            $file = Get-Item << pipeline.parameters.csproj-file >>
            [xml]$cn = Get-Content $file
            $version = $cn.Project.PropertyGroup.Version
            echo "##vso[task.setvariable variable=PACKAGE_VERSION]$version"
      - run:
          name: Install SonarScanner for MSBuild .NET Core Global Tool
          command: dotnet tool install --global dotnet-sonarscanner
      - run:
          name: Start SonarScanner
          command: dotnet sonarscanner begin /k:"<< pipeline.parameters.sonar-project >>" /d:sonar.verbose=true /o:"lansweeper" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login=$Env:SONAR_TOKEN /d:sonar.language="cs"
      - run: dotnet build << pipeline.parameters.csproj-file >> --configuration Release
      - run:
          name: Upload SonarScanner results
          command: dotnet sonarscanner end /d:sonar.login=$Env:SONAR_TOKEN
      - persist_to_workspace:
          root: .
          paths:
            - .

  nuget-prepare:
    executor:
      name: win/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Create local nuget config file
          command: |
            $xml = "<?xml version='1.0' encoding='utf-8'?>
            <configuration>
              <packageSources>
                <add key='github' value='https://nuget.pkg.github.com/Lansweeper/index.json' />
              </packageSources>
              <packageSourceCredentials>
                <github>
                  <add key='Username' value='$env:GITHUB_USER' />
                  <add key='ClearTextPassword' value='$env:GITHUB_TOKEN' />
                </github>
              </packageSourceCredentials>
            </configuration>"
            Out-File -FilePath nuget.config -InputObject $xml -Encoding ASCII
      - run: type nuget.config
      - persist_to_workspace:
          root: .
          paths:
            - .

  nuget-publish:
    executor:
      name: win/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Set correct version in csproj file, build and pack it
          command: |
            $file = Get-Item << pipeline.parameters.csproj-file >>
            [xml]$cn = Get-Content $file
            $cn.Project.PropertyGroup.Version="$env:PACKAGE_VERSION"
            $cn.Save($file.FullName)
            type ./<< pipeline.parameters.csproj-file >>
      - run:
          name: Pack the default package
          command: dotnet pack << pipeline.parameters.csproj-file >> --configuration Release
      - run:
          name: Pack the StaticLinking package
          command: dotnet pack << pipeline.parameters.csproj-file >> --configuration StaticLinking --configuration Release
      - run:
          name: Publish the default package
          command: |
            dotnet nuget push << pipeline.parameters.nuget-output-file >> --source "github" --api-key $env:GITHUB_TOKEN
      - run:
          name: Publish the StaticLinking package
          command: |
            dotnet nuget push << pipeline.parameters.nuget-output-file-static >> --source "github" --api-key $env:GITHUB_TOKEN

  sonar:
    executor: node
    steps:
      - attach_workspace:
          at: .
      - sonar-check/get_sonar_status:
          report_file: "/home/circleci/project/.sonarqube/out/.sonar/report-task.txt"

workflows:
  version: 2

  ci_on_pr:
    jobs:
      - build:
          context:
            - lec-github-packages-rw
            - SonarCloud
          filters:
            branches:
              ignore: master

      - sonar:
          context:
            - SonarCloud
          requires:
            - build
          filters:
            branches:
              ignore: master

  ci_and_release_master:
    jobs:
      - build:
          context:
            - lec-github-packages-rw
            - SonarCloud
          # filters:
          #   branches:
          #     only: master
      - nuget-prepare:
          requires:
            - build
          context:
            - lec-github-packages-rw
          # filters:
          #   branches:
          #     only: master
      - nuget-publish:
          requires:
            - nuget-prepare
          context:
            - lec-github-packages-rw
          # filters:
          #   branches:
          #     only: master 

  run-daily-tests:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only: master

    jobs:
      - build:
          context:
            - lec-github-packages-rw
            - SonarCloud